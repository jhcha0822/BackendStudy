plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.sds'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	
	// MySQL Driver
	// https://mvnrepository.com/artifact/mysql/mysql-connector-java
	implementation 'mysql:mysql-connector-java:5.1.49'
	
	// Spring JDBC
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-jdbc
	implementation 'org.springframework.boot:spring-boot-starter-jdbc:3.2.5'
		
	// mybatis Spring 버전 높은 것: @Mapper 지원을 위함
	// https://mvnrepository.com/artifact/org.mybatis.spring.boot/mybatis-spring-boot-starter
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	
	// gradle이 classpath를 잡음: jar 관리
	// 로컬 유저 라이브러리 추가
	implementation files('lib/kobis-opcl-rest-v1.0.jar', 'lib/kobis-opcl-soap-v1.0.jar')
	
	// json simple (String을 JSON으로 파싱)
	// https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	
	// Gson (JSON을 자바 객체로 변환)
	// https://mvnrepository.com/artifact/com.google.code.gson/gson
	implementation 'com.google.code.gson:gson:2.9.1'


	// https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api
	compileOnly 'javax.servlet:javax.servlet-api:4.0.1'

	// API 의존성
	implementation 'javax.xml.ws:jaxws-api:2.3.1'
	implementation 'com.sun.xml.ws:jaxws-rt:2.3.3'
	implementation 'com.sun.xml.messaging.saaj:saaj-impl:1.5.3'
	implementation 'com.sun.xml.bind:jaxb-impl:2.3.3'
	
	// Spring Security
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
	implementation 'org.springframework.boot:spring-boot-starter-security:3.2.5'
	
	// MongoDB
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-mongodb
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb:3.2.5'
	
	// AOP
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-aop
	implementation 'org.springframework.boot:spring-boot-starter-aop:3.2.5'

	// Komoran
	implementation files('lib/aho-corasick-1.1.0.jar', 'lib/commons-1.0.1.jar')
	implementation files('lib/core.jar', 'lib/elasticsearch-plugin-1.0-SNAPSHOT.jar')
	
}

tasks.named('test') {
	useJUnitPlatform()
}
