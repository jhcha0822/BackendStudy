# spring.application.name=MovieApp

# Github로 옮김
# server.port=7778

#---------------------------------------------
# config server 접속 관련 설정
#---------------------------------------------
spring.application.name=Movieapp
spring.profiles.active=dev
spring.config.import=optional:configserver:http://config:1234@localhost:9000

#---------------------------------------------
# Eureka server 접속 관련 설정
#---------------------------------------------
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
# eureka 서버의 주소
eureka.client.service-url.defaultZone=http://eureka:1234@localhost:8761/eureka

#---------------------------------------------
# logger 설정 trace < debug < info
# logging 사용으로 back 사용하기 위함
#---------------------------------------------
# logging.level.com.sds.movieapp.controller=DEBUG
# logging.level.com.sds.movieapp.model=DEBUG
logging.level.com.sds.movieapp=DEBUG

#---------------------------------------------
# thymeleaf
#---------------------------------------------
spring.thymeleaf.enabled=true
spring.thymeleaf.cache=false
# 패키지안의 리소스가 .java가 아니라면 일반 디렉토리 취급하므로 classpath:를 붙임
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.encoding=UTF-8

#---------------------------------------------
# MySql 설정
#---------------------------------------------
spring.datasource.url=jdbc:mysql://localhost:3306/movie?characterEncoding=utf-8
# spring.datasource.url=jdbc:mysql://localhost:3307/movie?characterEncoding=utf-8
spring.datasource.username=root
# spring.datasource.password=1234
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#---------------------------------------------
# Mybatis 설정
#---------------------------------------------
mybatis.type-aliases-package=com.sds.movieapp.domain
mybatis.mapper-locations=classpath:mybatis/*Mapper.xml

#---------------------------------------------
# MongoDB 설정
#---------------------------------------------
#spring.data.mongodb.uri=mongodb://movie:1234@localhost:27017/?authSource=movie 는 아래와 동일

#spring.data.mongodb.username=movie
#spring.data.mongodb.password=1234
#spring.data.mongodb.host=localhost
#spring.data.mongodb.port=27017
#spring.data.mongodb.database=movie

#---------------------------------------------
# API key
#---------------------------------------------
movie.api.key=30f984da944ad5a0b9051f9c46d04d27

#---------------------------------------------
# Naver 로그인 관련 설정
#---------------------------------------------
# 동의 화면 주소
sns.naver.endpoint=https://nid.naver.com/oauth2.0/authorize

sns.naver.client_id=wHlZfZxqNM2SF7HCbMKL
sns.naver.client_secret=LUILzS69Xa

# Callback 주소
sns.naver.redirect_uri=http://localhost:7778/member/sns/naver/callback

# Callback 받을때 전달될 파라미터명
sns.naver.response_type=code
sns.naver.state=naver_login

# 토큰 요청 주소
sns.naver.token_request_url=https://nid.naver.com/oauth2.0/token
sns.naver.grant_type=authorization_code

# 회원정보 조회 주소 url
sns.naver.userinfo_url=https://openapi.naver.com/v1/nid/me

#---------------------------------------------
# Kakao 로그인 관련 설정
#---------------------------------------------
# 사용자가 보게 될 인증 화면 url
sns.kakao.endpoint=https://kauth.kakao.com/oauth/authorize

# kakao는 client-secret 없이 app key만 사용
sns.kakao.client_id=c85421b9a94922895c32ce59e4bd28e9

# callback 주소
sns.kakao.redirect_uri=http://localhost:7778/member/sns/kakao/callback

# callback 전달 파라미터
sns.kakao.response_type=code

# token 요청 주소
sns.kakao.token_request_url=https://kauth.kakao.com/oauth/token
sns.kakao.grant_type=authorization_code

# 회원정보 요청 url
sns.kakao.userinfo_url=https://kapi.kakao.com/v2/user/me

